#---------------------------------------------------------------------
# Example configuration.  See the full configuration manual online.
#
#   http://www.haproxy.org/download/2.5/doc/configuration.txt
#
#---------------------------------------------------------------------

##### 全局配置信息 ######
global
    # 默认最大连接数
    maxconn     20000
    log         127.0.0.1 local0
    # 运行用户
    user        haproxy
    group       haproxy
    # chroot运行路径
    chroot      /usr/share/haproxy
    # pid文件存放路径
    pidfile     /run/haproxy.pid
    # 以后台形式运行daemon
    daemon
    # ulimit的数量限制
    ulimit-n 65535
    # 开启套接子socket
    # stats socket /var/lib/haproxy/stats

##### 默认的全局配置 ######
# 这些参数可以被配置到frontend、backend、listen组建
defaults
    # http 7层模式
    mode                    http
    # 应用全局的log配置
    log                     global
    # 启用http的log
    option                  httplog
    option                  dontlognull
    option http-server-close
    # 如果后端服务器需要获得客户端真实ip需要配置的参数。可以从http header中获得客户端ip
    option forwardfor       except 127.0.0.0/8
    # serverid对应的服务器挂掉后，强制定向到其他健康服务器
    option                  redispatch
    # 3次连接就认为服务不可用，也可以通过后面设置
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    # 心跳检测超时
    timeout check           10s
    # 默认最大连接数
    maxconn                 20000
    # 连接超时
    contimeout              5000
    # 服务器超时
    srvtimeout              50000

##### frontend配置 #####
frontend  main
    # 监听端口。即haproxy提供web服务的端口
    bind :80
    # http 7层模式
    mode                 http
    # 应用全局的log配置
    log                  global
    # 启用http的log
    option               httplog
    option               dontlognull
    # 如果后端服务器需要获得客户端真实ip需要配置的参数。可以从http header中获得客户端ip
    option forwardfor    except 127.0.0.0/8
    maxconn              8000
    timeout              client  30s

    ##### acl策略配置 #####
    acl url_static       path_beg       -i /static /images /javascript /stylesheets
    acl url_static       path_end       -i .jpg .gif .png .css .js

    # 当满足url_static时使用app的后端
    use_backend app          if url_static
    default_backend          app

##### backend配置 #####
backend app
    # http 7层模式
    mode        http
    # 负载均衡算法，roundrobin为平均算法
    balance     roundrobin
    timeout     connect 5s
    timeout     server  5s
    # 服务器定义。cookie web1表示serveid为web 1；rise 3是3次正确认为服务器可用；weight为权重
    server      web1 192.168.110.6:80 cookie web1 check inter 1500 rise 3 weight 1
    server      web2 192.168.110.7:80 cookie web2 check inter 1500 rise 3 weight 2
